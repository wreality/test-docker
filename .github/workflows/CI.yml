name: CI
on:
  pull_request:
  merge_group:
  push:
    branches:
      - master
      - renovate/*

jobs:
  build-images:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Find Tag
        id: tagger
        shell: bash
        run: |
          git fetch --prune --unshallow
          echo "VERSION=$(git describe --tags)" >> ${GITHUB_ENV}
          echo "VERSION_URL=https://github.com/MESH-Research/CCR/commits/${GITHUB_SHA}" >> ${GITHUB_ENV}
          echo "VERSION_DATE=$(git show -s --format=%cI ${GITHUB_SHA})" >> ${GITHUB_ENV}
      - uses: docker/setup-buildx-action@v3
      - name: Docker meta (FPM)
        id: docker-meta-fpm
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/test-docker/fpm
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,enable=${{ github.event_name == 'push' }}
          labels: |
            org.opencontainers.image.description=Pilcrow FPM Container Image version: ${{ env.VERSION }}@${{env.VERSIONDATE }} (${{ env.VERSION_URL }})
          bake-target: fpm
      - name: Docker meta (WEB)
        id: docker-meta-web
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository_owner }}/test-docker/web
          tags: |
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,enable=${{ github.event_name == 'push' }}
          bake-target: web
          labels: |
            org.opencontainers.image.description=Pilcrow WEB (Proxy/Nginx) Container Image version: ${{ env.VERSION }}@${{env.VERSIONDATE }} (${{ env.VERSION_URL }})
      - name: Build and push
        uses: docker/bake-action@v4
        with:
          pull: true
          targets: release
          files: |
            ./docker-bake.hcl
            ${{ steps.docker-meta-fpm.outputs.bake-file }}
            ${{ steps.docker-meta-web.outputs.bake-file }}
      # - run: |
      #     gzip -c /tmp/web.tar > /tmp/web.tar.gz
      #     gzip -c /tmp/fpm.tar > /tmp/fpm.tar.gz
      #   shell: bash
      #   if: ${{ inputs.target == 'ci' }}
      - name: Upload artifact
        if: ${{ inputs.target == 'ci' }}
        uses: actions/upload-artifact@v3
        with:
          name: Docker Images
          path: /tmp/*.tar
